buildscript {
	ext {
		queryDSlVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.ewerk.gradle.plugins.querydsl' version'1.0.10'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor(
			"jakarta.persistence:jakarta.persistence-api:",
			"jakarta.annotation:jakarta.annotation-api",
			"com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	)
}

tasks.named('test') {
	useJUnitPlatform()
}


/******
 * QueryDSL Build Options
 * 
 */
def querydslDir = "src/main/generated"


sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated", querydslDir]
		}
	}
}


compileJava.dependsOn('clean')